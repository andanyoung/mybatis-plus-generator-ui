package ${package.Controller};

import com.admin4j.framework.web.factory.CommonPageMpFactory;
import com.admin4j.framework.web.pojo.CommonPage;
import com.admin4j.framework.web.pojo.R;
import org.springframework.web.bind.annotation.*;
<% if(!restControllerStyle){ %>
import org.springframework.stereotype.Controller;
<% } %>
<% if(isNotEmpty(superControllerClassPackage)){ %>
import ${superControllerClassPackage};
<% } %>
<% if(isNotEmpty(controllerMethods.list)){  %>
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
<% } %>
<% if(isNotEmpty(controllerMethods.hasMethod)){  %>
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${table.entityName};
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
<% } %>
import java.io.Serializable;
/**
 * <p>
 * ${table.comment!} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
<% if(restControllerStyle){ %>
@RestController
<% }else{ %>
@Controller
<% } %>
@RequestMapping("<% if(isNotEmpty(controllerMappingHyphenStyle)){ %>${controllerMappingHyphen}<% }else{ %>${table.entityPath}<% } %>")
@Api(tags = "${table.comment!}")
<% if(kotlin){ %>
class ${table.controllerName}<% if(isNotEmpty(superControllerClass)){ %> : ${superControllerClass}()<% } %>
<% }else{ %>
    <% if(isNotEmpty(superControllerClass)){ %>
public class ${table.controllerName} extends ${superControllerClass} {
    <% }else{ %>
public class ${table.controllerName} {
    <% } %>

    <%
       var serviceInstanceName = @com.github.davidfantasy.mybatisplus.generatorui.StringUtils.serviceName(table.serviceName);
    %>

    <% if(isNotEmpty(controllerMethods.hasMethod)){  %>
    @Autowired
    private ${table.serviceName} ${serviceInstanceName};
    <% } %>

    <% if(isNotEmpty(controllerMethods.list)){  %>
    @GetMapping
    @ApiOperation("分页查询")
    public CommonPage<${table.entityName}> list(@RequestParam(required = false) Integer current, @RequestParam(required = false) Integer pageSize) {
        if (current == null) {
            current = 1;
        }
        if (pageSize == null) {
            pageSize = 10;
        }
        Page<${table.entityName}> aPage = ${serviceInstanceName}.page(new Page<>(current, pageSize));
        return CommonPageMpFactory.ok(aPage);
    }
    <% } %>

    <% if(isNotEmpty(controllerMethods.getById)){ %>
    @GetMapping(value = "/{id}")
    @ApiOperation("获取单行")
    public R<${table.entityName}> getById(@PathVariable("id") Serializable id) {
        return R.ok(${serviceInstanceName}.getById(id));
    }
    <% } %>

    <% if(isNotEmpty(controllerMethods.create)){ %>
    @PostMapping
    @ApiOperation("新增")
    public R create(@RequestBody ${table.entityName} params) {
        ${serviceInstanceName}.save(params);
        return R.okMsg("created successfully");
    }
    <% } %>

    <% if(isNotEmpty(controllerMethods.delete)){ %>
    @DeleteMapping(value = "/{id}")
    @ApiOperation("删除")
    public R delete(@PathVariable("id") Serializable id) {
        ${serviceInstanceName}.removeById(id);
        return R.okMsg("deleted successfully");
    }
    <% } %>

    <% if(isNotEmpty(controllerMethods.update)){ %>
    @PutMapping(value = "/{id}")
    @ApiOperation("更新")
    public R update(@PathVariable("id") Serializable id, @RequestBody ${table.entityName} params) {
        ${serviceInstanceName}.updateById(params);
        return R.okMsg("updated successfully");
    }
    <% } %>
}
<% } %>
